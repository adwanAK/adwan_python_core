#!/usr/bin/env python3

"""
Exercise 11.5.
Two words are “rotate pairs” if you can rotate one of them and get the other (see
rotate_word in Exercise 8.5).

Write a program that reads a wordlist and finds all the rotate pairs.
Solution: http://thinkpython2.com/code/rotate_pairs.py
"""

def make_dict(file_input):
    dictionary = dict()
    word_list = []
    
    fin = open(file_input)
    for line in fin:
        word = line.strip()
        word_list.append(word)
    
    index = 0
    for word in word_list:
        dictionary[word] = index
        index += 1
    return dictionary


def rotate_word(word, shift):
    """Uses Ceasar cypher to encrypt given word using given shift."""
    rotated_word = ''
    for letter in word:
        rotated_word += chr(ord(letter) + shift)
    return rotated_word


def rotate_pairs(word_dict):
    """Returns dictionary with pairs "word:list of tuples with rotated_word and shift"
    which can be generated by using function rotate_word on every word in word_dict
    and pairing it with returned rotated word it the latter is also found in word_dict.
    """
    
    pairs = {}
    for letter in range(1, 27):  # numbers of letters in alphabet
        for word in word_dict:
            if rotate_word(word, letter) in word_dict:
                if word in pairs:
                    pairs[word].append((rotate_word(word, letter), letter))
                else:
                    pairs[word] = [(rotate_word(word, letter), letter)]
    return pairs              


dictionary = make_dict("words.txt")
print(rotate_pairs(dictionary))
